version: '{build}'

clone_folder: c:\projects\open62541
clone_depth: 20

# Avoid building branch if it is part of a PR and built anyways
skip_branch_with_pr: true

image: Visual Studio 2013

environment:
    global:
        APPVEYOR_CACHE_ENTRY_ZIP_ARGS: -t7z -m0=lzma -mx=9

    matrix:
        #- CC_NAME: MinGW Makefiles
        #  CC_SHORTNAME: mingw
          # We need to redirect stderr to stdout otherwise powershell will fail if there is an output during amalgamation.
          # Only use one thread, otherwise appveyor runs out of memory
        #  MAKE: mingw32-make -j1 2>&1
        #  FORCE_CXX: OFF
        #  OUT_DIR_LIB: bin
        #  OUT_DIR_EXAMPLES: bin\examples
        #- CC_NAME: Visual Studio 9 2008
        #  CC_SHORTNAME: vs2008
        #  MAKE: msbuild /p:ContinueOnError=false /p:StopOnFirstFailure=true open62541.sln
        #  FORCE_CXX: ON
        #  OUT_DIR_LIB: bin\Debug
        #  OUT_DIR_EXAMPLES: bin\examples\Debug
        #- CC_NAME: Visual Studio 12 2013
        #  CC_SHORTNAME: vs2013
        #  MAKE: msbuild /p:ContinueOnError=false /p:StopOnFirstFailure=true open62541.sln
        #  FORCE_CXX: OFF
        #  OUT_DIR_LIB: bin\Debug
        #  OUT_DIR_EXAMPLES: bin\examples\Debug
        #- CC_NAME: Visual Studio 14 2015
        #  CC_SHORTNAME: vs2015
        #  MAKE: msbuild /p:ContinueOnError=false /p:StopOnFirstFailure=true open62541.sln
        #  FORCE_CXX: OFF
        #  OUT_DIR_LIB: bin\Debug
        #  OUT_DIR_EXAMPLES: bin\examples\Debug
        - CC_NAME: Clang-CL
          CC_SHORTNAME: clang-cl
          GENERATOR: Ninja
          # We need to redirect stderr to stdout otherwise powershell will fail if there is an output during amalgamation.
          # Only use one thread, otherwise appveyor runs out of memory
          MAKE: ninja
          FORCE_CXX: OFF
          OUT_DIR_LIB: bin
          OUT_DIR_EXAMPLES: bin\examples

cache:
  - C:\ProgramData\chocolatey\bin -> tools/appveyor/install.ps1
  - C:\ProgramData\chocolatey\lib -> tools/appveyor/install.ps1
  - C:\tools\vcpkg\installed -> tools/appveyor/install.ps1
  #- 'c:\miktex'

init:
  - git config --global core.autocrlf input # Attempt to ensure we don't try to convert line endings to Win32 CRLF as this will cause build to fail

install:
- set PATH=C:\Users\appveyor\AppData\Roaming\Python\Scripts;%PATH%
- ps: '& "./tools/appveyor/install.ps1"'
# Install Ninja
- choco upgrade ninja
#- set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip"
#- appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
#- 7z x ninja.zip -oC:\projects\dev\ninja > nul
- set PATH=%PATH%;C:\projects\dev\ninja
- ninja --version
- set CMAKE_MAKE_PROGRAM=C:\projects\dev\ninja\ninja.exe
# Verify CMake
#- cmake --version
# Install make because TBB uses it
- choco install make
# Enable integration for Visual Studio/MSBuild
#- cd c:\tools\vcpkg
#- vcpkg integrate install
# Setup Clang-cl
- set PATH=%PATH%;"C:\Program Files\LLVM\bin"
- set PATH=%PATH%;"C:\Program Files (x86)\Windows Kits\10\bin\x64"
- set PATH=%PATH%;"C:\Program Files (x86)\Windows Kits\10\bin\x86"
- clang-cl -v
- set CC=clang-cl
- set CXX=clang-cl

- ECHO Fixing VS2008 Express and 64bit builds
- COPY "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\vcvarsall.bat" "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\amd64\vcvarsall.bat"

- ps: '& "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\amd64\vcvarsall.bat" x86_amd64 8.1'
  
- set CMAKE_CXX_COMPILER="C:\Program Files\LLVM\bin\clang-cl"
- set CMAKE_LINKER="C:\Program Files\LLVM\bin\lld-link.exe"
- set CMAKE_CXX_LINK_EXECUTABLE="<CMAKE_LINKER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>"
- set CMAKE_C_LINK_EXECUTABLE="<CMAKE_LINKER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>"
- set CMAKE_RC_COMPILER="C:\Program Files\LLVM\bin\llvm-rc.exe"

before_build:
  # Add installed tools to PATH
  - set PATH=C:\Python27;C:\Program Files (x86)\Dr. Memory\bin;C:\Program Files\CMake\bin;%PATH%
  # Workaround for CMake not wanting sh.exe on PATH for MinGW
  - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  ## Miktex
  #- set "PATH=%PATH%;c:\miktex\texmfs\install\miktex\bin;%APPDATA%\Python\Scripts"
  ## autoinstall latex packages (0=no, 1=autoinstall, 2=ask)
  ## this adds this to the registry!
  #- initexmf --set-config-value [MPM]AutoInstall=1
  #- initexmf --update-fndb

build_script:
- ps: '& "./tools/appveyor/build.ps1"'

after_build:
  - appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\open62541-%CC_SHORTNAME%-static.zip
  - appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\open62541-%CC_SHORTNAME%-dynamic.zip
